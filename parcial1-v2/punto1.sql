/*
JUAN SEBASTIAN HENAO
RECUPERACION PARCIAL 1

PUNTO 1: 
- Dado un tag obtener el top 10 ranking de peliculas con mejor puntuacion en promedio. Utilizando stored procedures.
*/


CREATE OR REPLACE PROCEDURE JUHE_PUNTO1_GET_AVG (
    N_MOVIE_ID IN RATINGS.MOVIE_ID%TYPE,
    N_AVG IN OUT RATINGS.RATING%TYPE
) AS 

CURSOR C_MOVIE_AVG IS SELECT RATINGS.MOVIE_ID AS MOVIE_ID, ROUND(AVG(RATINGS.RATING), 2) as AVERAGE
                FROM RATINGS
                WHERE RATINGS.MOVIE_ID=N_MOVIE_ID
                GROUP BY RATINGS.MOVIE_ID;

BEGIN

FOR I IN C_MOVIE_AVG LOOP

    N_AVG := I.AVERAGE;

END LOOP;


END JUHE_PUNTO1_GET_AVG;


CREATE OR REPLACE PROCEDURE JUHE_PUNTO1(
    S_TAG IN TAGS."TAG"%TYPE
) AS

CURSOR C_MOVIES IS SELECT DISTINCT(MOVIES.MOVIE_ID), MOVIES.TITLE
                    FROM TAGS
                    INNER JOIN MOVIES
                    ON MOVIES.MOVIE_ID = TAGS.MOVIE_ID
                    WHERE TAGS."TAG"=S_TAG;
                    
N_CURRENT_AVG NUMBER := 0;
S_CURRENT_TITLE VARCHAR2(256) := '';

BEGIN

DELETE FROM TEMPORAL;

FOR I IN C_MOVIES LOOP
    
    S_CURRENT_TITLE := I.TITLE;
    N_CURRENT_AVG := 0;

    JUHE_PUNTO1_GET_AVG(I.MOVIE_ID, N_CURRENT_AVG);
    
    INSERT INTO TEMPORAL(ID_1, VALUE_1)
    VALUES (S_CURRENT_TITLE, TO_CHAR(N_CURRENT_AVG)); 

END LOOP;

END JUHE_PUNTO1;

SET SERVEROUTPUT ON;

-- EXAMPLE EXECUTION
DECLARE
v_start_time NUMBER;
v_elapsed_time NUMBER;
N_AVERAGE NUMBER;
BEGIN
v_start_time := DBMS_UTILITY.GET_TIME;

JUHE_PUNTO1('singer');

v_elapsed_time := DBMS_UTILITY.GET_TIME - v_start_time;
DBMS_OUTPUT.PUT_LINE('Elapsed time: ' || v_elapsed_time);

END;

SELECT ID_1 AS TITLE, VALUE_1 AS AVERAGE
FROM TEMPORAL
ORDER BY AVERAGE DESC
FETCH FIRST 10 ROWS ONLY;
